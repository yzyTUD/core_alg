
#include <iostream>
#include <stdlib.h>
#include <GL/glut.h>

using namespace std;
float _angle = 0 ;

int data[][ 3] = { { 0, 0, 0 }, { 1, 0, 0 }, {0 ,1, 0},{0 , 0 , 1 } };

void handleResize( int w , int h) {
                 glViewport(0 , 0 , w , h );
                 glMatrixMode(GL_PROJECTION );
                 glLoadIdentity ();
                 gluPerspective (45.0, (float )w / ( float)h , 1.0 , 200.0 );
}

void drawScene() {
                 gluLookAt(0 , 0 , 5 , 0 , 0 , 0 , 0 , 1 , 0 );
                 //gluPerspective(60,1.0,0.5,30);  透视投影
                 glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );
                 glMatrixMode(GL_MODELVIEW );
                 glLoadIdentity ();

                 glTranslatef(0.0f , 0.0f , - 3);
                 glRotatef(_angle , 0 , 1 , 0 );

                 for ( int j = 0; j < 512* 512; j++){
                                 glBegin(GL_LINES );

                                 glColor3f(1.0f , 1.0f , 1.0f );
                                 for ( int i = 0; i < 3; i++)
                                 {
                                                 glVertex3d(data [i][ 0], data[i ][1], data[ i][2 ]);
                                                 glVertex3d(data [i + 1 ][0], data[ i + 1][ 1], data[i + 1][2 ]);
                                 }
                                 glEnd();

                 }

                 glutSwapBuffers ();

}

//Called every 25 milliseconds
void update( int value ) {
                 _angle += 1.0f;
                 if ( _angle > 360) {
                                 _angle -= 360;
                 }
                 glutPostRedisplay ();
                 glutTimerFunc(25 , update , 0 );
}

int main( int argc , char ** argv ) {
                 glutInit(&argc , argv );
                 glutInitDisplayMode (GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
                 glutInitWindowSize (400, 400);
                 glutCreateWindow ("yu");
                 glutDisplayFunc (drawScene);
                 glutReshapeFunc (handleResize);
                 glutTimerFunc(25 , update , 0 );
                 glutMainLoop();
                 return 0 ;
}

