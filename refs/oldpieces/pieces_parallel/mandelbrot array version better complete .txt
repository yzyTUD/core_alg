#include <complex>
#include <iostream>

using namespace std;

void calcu(char *matAsArray,int start, int end,int max_n,int max_column,int max_row){
	for(int i=start;i<end;i++){
		int r=i/max_column;
		int c=i%max_column;
		complex<float> z;
		int n = 0;
		while(abs(z) < 2 && ++n < max_n)
			z = pow(z, 2) + decltype(z)(
				(float)c * 2 / max_column - 1.5,
				(float)r * 2 / max_row - 1
			);
		matAsArray[i]=(n == max_n ? '#' : '.');
	}
}

int main(){
	int max_row, max_column, max_n;
	// cin >> max_row;
	// cin >> max_column;
	// cin >> max_n;
	max_row=100;
	max_column=100;
	max_n=20;

	//char **mat = (char**)malloc(sizeof(char*)*max_row);

	//for (int i=0; i<max_row;i++)
		//mat[i]=(char*)malloc(sizeof(char)*max_column);
	char* matAsArray=(char*)malloc(sizeof(char)*max_column*max_row);
	
	// mat , start , stop , some add. para.
	//calcu(matAsArray,0,3*max_column,max_n,max_column,max_row);
	calcu(matAsArray,10*max_column,30*max_column,max_n,max_column,max_row);

	for(int r = 0; r < max_row; ++r){
		for(int c = 0; c < max_column; ++c)
			std::cout << matAsArray[r*max_column+c];
		cout << '\n';
	}	
}


