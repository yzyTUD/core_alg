#include "cv.h"
#include "cxcore.h"
#include "highgui.h"
#include <iostream>

using namespace std;
int main()
{
		int n;
		int i = 0; int j = 0;
		while (1){
			CvCapture* capture = cvCaptureFromCAM(0);
			CvVideoWriter* video = NULL;
			IplImage* frame = NULL;
			cvNamedWindow("Camera Video", 1); //新建一个窗口
			frame = cvQueryFrame(capture); //首先取得摄像头中的一帧

			char filename[100];
			time_t rawtime;
			struct tm * timeinfo;
			time(&rawtime);
			timeinfo = localtime(&rawtime);
			sprintf(filename, "C://Users//yzy//Documents//imageData//myVideos//camera_%d.%d.%d_%dh%dm%ds.avi", timeinfo->tm_mday, timeinfo->tm_mon + 1, timeinfo->tm_year + 1900, timeinfo->tm_hour, timeinfo->tm_min, timeinfo->tm_sec);
			video = cvCreateVideoWriter(filename, CV_FOURCC('X', 'V', 'I', 'D'), 32,
				cvSize(frame->width, frame->height)); //创建CvVideoWriter对象并分配空间
			//保存的文件名为camera.avi，编码要在运行程序时选择，大小就是摄像头视频的大小，帧频率是32
			if (video) //如果能创建CvVideoWriter对象则表明成功
			{
				cout << "VideoWriter has created." << endl;
			}
			j++;
			i = 0;
			//开始一段短视频
			while (i <= 2000) // 让它循环2000次自动停止录取,大概一分钟
			{
				frame = cvQueryFrame(capture); //从CvCapture中获得一帧
				if (!frame)
				{
					cout << "Can not get frame from the capture." << endl;
					break;
				}
				n = cvWriteFrame(video, frame); //判断是否写入成功，如果返回的是1，表示写入成功
				cout << n << endl;
				cvShowImage("Camera Video", frame); //显示视频内容的图片
				i++;
				if (cvWaitKey(2) > 0)
				{
					cvReleaseVideoWriter(&video);
					cvReleaseCapture(&capture);
					cvDestroyWindow("Camera Video");
					return 0;
				} //有其他键盘响应，则退出
				
			}
			cvReleaseVideoWriter(&video);
			cvReleaseCapture(&capture);
			cvDestroyWindow("Camera Video");
			//短视频到此结束，开始下一个循环
		}
		return 0;
	}
