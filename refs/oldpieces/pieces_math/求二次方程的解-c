
// TestC++.cpp : 定义控制台应用程序的入口点。
//

#include <stdio.h>
#include<math.h>
double DBL_MAX = 100000;

int ercifangcheng(){
       //printf("Hello world!\n");
       printf("flt_max %Ef", DBL_MAX);
       double x1;//x1,x2分别为方程的2个解
       double x2;
       double melt;
       double a;
       double b;//初始化ABC的三个变量
       double c;

       printf("请输入a b c三个数的值：");
       scanf("%lf %lf %lf", &a, &b, &c);//输入ABC的时候需要空格

       if (a == 0){
              printf("输入有误！\n");
              return -1;
       }

       if (b >= sqrt(DBL_MAX)){//判断是否溢出

              printf("%ef", b);
              double  temp_b = b / a;

              double  temp_c = c / a;

              double  temp_a = 1.0;

              melt = temp_b*temp_b - 4 * temp_c;
              if (melt >= 0){
                     x1 = (-temp_b + sqrt(melt)) / 2;
                     x2 = (-temp_b - sqrt(melt)) / 2;
                     printf("2个解,x1 = %lf,x2 = %lf\n", x1, x2);
              }

              else{
                     double d = (double)-b / 2;
                     double e = sqrt(-melt) / 2;
                     printf("存在复数解, x1的实部为%lf, x1的虚部为%lf . x2的实部为%lf, 虚部为%lf \n", d, e, d, -e);
              }
       }

       //没有溢出

       else{
              melt = b*b - 4 * a*c;//初始化melt的值

              printf("%lf", melt);
              if (melt>0){

                     if (b<0){
                           x1 = (-b + sqrt(melt)) / (2 * a);
                           x2 = (2 * c) / (-b + sqrt(melt));
                     }

                     else {
                           x1 = (-b - sqrt(melt)) / (2 * a);
                           x2 = (2 * c) / (-b - sqrt(melt));

                     }

                     printf("2个解,x1 = %lf,x2 = %lf\n", x1, x2);
              }

              else if (melt == 0)
              {
                     x1 = (-b) / (2 * a);
                     x2 = x1;
                     printf("1个解,x1 = %lf,x2 = lf%\n", x1, x2);
              }
              else
              {
                     double d = (double)-b / (2 * a);
                     double e = sqrt(-melt) / (2 * a);
                     printf("存在复数解, x1的实部为%lf, x1的虚部为%lf . x2的实部为%lf, 虚部为%lf \n", d, e, d, -e);
              }
       }

       return 0;
}

int main(){

       ercifangcheng();
       return 0;
}

