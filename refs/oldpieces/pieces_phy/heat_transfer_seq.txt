#define _CRT_SECURE_NO_DEPRECATE
#include <stdio.h>
#include <stdlib.h>
/*
 * Allocates a dynamic 2D array of floats
 */
float **makeArray2f(int width, int height) {
	size_t rowSize = sizeof(float) * width;
	size_t colSize = sizeof(float) * height;
	float **result = (float**)malloc(rowSize);
	for (int i = 0; i < width; i++) {
		result[i] = (float*)malloc(colSize);
	}
	return result;
}

int main() {
	int SIZE = 16;
	int ITR = 100;
	float** arr1 = makeArray2f(SIZE, SIZE);
	float** arr2 = makeArray2f(SIZE, SIZE);
	// initialize.  initial grid will look like:
	// 1 0 0 0...
	// 1 0 0 0...
	// 1 0 0 0...
	// 1 0 0 0...
	for (int i = 0; i < SIZE; i++) {
		for (int j = 0; j < SIZE; j++) {
			if (j == 0)
				arr2[i][j] = arr1[i][j] = 1; // hot at top and left
			else
				arr2[i][j] = arr1[i][j] = 0;
		}
	}

	for (int t = 0; t < ITR; t++) {
		for (int i = 1; i < SIZE - 1; i++) {
			for (int j = 1; j < SIZE - 1; j++) {
				arr2[i][j] = (float)(0.25*(arr1[i - 1][j] + arr1[i + 1][j] + arr1[i][j - 1] + arr1[i][j + 1]));
			}
		}
		float** temp = arr1;
		arr1 = arr2;
		arr2 = temp;
	}


	FILE *results;
	results = fopen("results.txt", "w");
	for (int i = 0; i < SIZE; i++) {
		for (int j = 0; j < SIZE; j++) {
			fprintf(results, "%.6f ", arr1[i][j]);
		}
		fprintf(results, "\n");
	}

}


