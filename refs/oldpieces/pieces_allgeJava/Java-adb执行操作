import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.concurrent.TimeUnit;
import javax.imageio.ImageIO;

public class JumpJumpHelper
{
	private static final String	IMAGE_NAME		= "current.png";
	private static final String	STORE_DIR		= "c:/jump_screencapture"; /* 数量 */
	private static final int	imageLengthLength	= 5;
	/* 存放图片的大小 */
	private static final long[]	imageLength = new long[imageLengthLength];
	private final			String[]  ADB_SCREEN_CAPTURE_CMDS = { "adb shell screencap -p /sdcard/" +
									      IMAGE_NAME, "adb pull /sdcard/current.png " + STORE_DIR };
	private final int		swipeX	= 690;
	private final int		swipeY	= 2069;
	private void executeADBCaptureCommands()
	{
		for ( String command : ADB_SCREEN_CAPTURE_CMDS )
		{
			executeCommand( command );
		}
	}

	/**
	 * 执行命令
	 */
	private void executeCommand( String command )
	{
		Process process = null;
		try
		{
			process = Runtime.getRuntime().exec( command );
			System.out.println( "exec command start: " + command );
			process.waitFor();
			BufferedReader	bufferedReader	= new BufferedReader( new InputStreamReader( process.getErrorStream() ) );
			String		line		= bufferedReader.readLine();
			if ( line != null )
			{
				System.out.println( line );
			}
			System.out.println( "exec command end: " + command );
		}
		catch ( Exception e )
		{
			e.printStackTrace();
		}
		finally
		{
			if ( process != null )
			{
				process.destroy();
			}
		}
	}

	private void doPress( double distance )
	{
		System.out.println( "distance: " + distance );
		/* 计算按压时间，最小200毫秒 */
		int pressTime = 200;
		/* (int) Math.max(distance * pressTimeCoefficient, 200); */
		System.out.println( "pressTime: " + pressTime );
		/* 执行按压操作 */
		String command = String.format( "adb shell input swipe %s %s %s %s %s", swipeX, swipeY, swipeX, swipeY,
						pressTime );
		System.out.println( command );
		executeCommand( command );
	}

	private void getScreen(){
		File storeDir = new File( STORE_DIR );
		if ( !storeDir.exists() )
		{
			boolean flag = storeDir.mkdir();
			if ( !flag )
			{
				System.err.println( "创建图片存储目录失败" );
				return;
			}
		}
		
		/* 执行次数 */
		int executeCount = 0;
		/* 执行ADB命令，获取安卓截屏 */
		this.executeADBCaptureCommands();
		File currentImage = new File( STORE_DIR, IMAGE_NAME );
		if ( currentImage.exists() )
		{
			System.out.println( "图片存在！" );
		}
	}
	
	private void processScreen(){
		
	}
	
	public static void main( String[] args )
	{
		JumpJumpHelper jh = new JumpJumpHelper();
		jh.getScreen();
		jh.doPress( 200 );
	}
}