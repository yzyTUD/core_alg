
    
    为什么要有自己的库？
        summ.
            +方便改动，完全熟悉
            +包含最新算法
            -参考很多人写的内容而后形成自己的风格或者很可能需要重写
        本人十分不明白所谓c++开发慢，是指慢在哪。本人估计是很多c++程序员去造轮子，所以时间都花在造轮子上了。
        另外公司的android/ios播放器，网络部分也基于asio写的，15年开发的。
        在阅读能力有限的情况下，自己造的轮子脾性更清楚，也不容易用错，甚至可以随便改动、精简源码。
        你想稍微改一下，结果点开一个一万行的源文件各种boost::detail::__wtf_helper::__wtf_helper_imp
            l::foo(bar,baz) const noexcept，你敢随便动吗
        boost里铺天盖地的抽象、封装、多态、编译器黑科技，代码没用对一个error几十k错误信息，一来debug得疯，二来万一想改造一下boost功能也得疯
        boost的某些库有性能问题，比如说boost::format比snprintf慢20甚至30倍以上
        
    相当于什么地位？目的是什么？
        summ. 
            写好这个库肯定大有用处！而且足够有用！ 
            如果面试的话最好不断重构
            别人fw有的东西，我又不想改太多的话不要重写，在程序中标记就ok了
        比如opencv，openmesh。有些函数方法或许只是在特定的条件下才可以运行
        首先是有一定依赖的，相当于中间层的东西，二次开发
        其次适应性非常广，适应各种开发的核心部分
            如果应聘的话，环境平台都是根据厂子来，肯定是已经搭建好的了
            对于科研，环境平台老师说了算，有一小部分自己说了算
            对于平台我认为不需要自己有真代码，除非创业。
            应聘和科研都是够用的
            创业也是：平台搭建+核心模块，这里处理的就是核心模块，回国面试也是算法
        就像是fb的那个库，主要是填补空白，已经流行的东西大概写他10种左右就ok了
        目的是科研和就业创业
        
    c++程序库大赏--看别人的代码思路，实现技巧，格式，参考补充自己的库
        // 
            排序根据有用程度的
            stl，boost
            思考：人家是怎么有自己的特色的？最好是看比较新的库！最好研究大厂的开源程序！
        推荐一下脸书的folly，毕竟广告还是要打的 GitHub - facebook/folly: An open-source C++ library developed and used at Facebook.folly就是一个杂货铺，里面很多boost没有的东西。
            folly还有各种各样的数据结构，比如MPMCQueue是一个多Consumer多Producer的queue，用起来非常方便，速度也快。AtomicList，AtomicUnorderedMap，AtomicStruct都是一个在高并发的情况下需要用到的数据结构
        ok-3D 模型解析 assimp/assimp
        ok-nanovg: 基于openGL/DX/metal的2d绘图库. 绘图效率高, 接口清晰.
            used with nanogui 
        * snappy/zlib/lz4 数据压缩，解压缩, 7z 
        ffmpeg 
            p- need to be configured 
        glm 
        cgal 
            p- extra. dep.
        libssh2 这个库我一般不用它来加密，只是用它来做反向隧道和正向隧道
        * libBSON JSON序列化/反序列化，MongoDB使用这种格式存储数据
        E: 包含大量计算几何算法的 Geometric Tools https://www.geometrictools.com/
        ok-ACD: 专注寻路 recastnavigation/recastnavigation 
        ok-E: 包含最经典渲染算法的 mmp/pbrt-v3
        ACD: 最快的哈希算法 Cyan4973/xxHash
        ok-CD: 又快又不折腾的 xml 解析 zeux/pugixml
        ok-ABCD: 拿来就能用的 UI ocornut/imgui
            comes with a sln file 
        stb_image: 常见图片格式加载库, 就一个巨大无比的头文件
            https://github.com/jschmidt42/stb-cmake
            extra. dep. not so good..., GL . we can use opencv as alternative  
        ok-imgui: 大名鼎鼎的imgui, 你可能会问在有一堆GUI框架的情况下为什么我们需要imgui? 因为它是immediate mode的
        spdlog: logger库, 重点推荐! 为什么呢? 因为好使! 没有废话. 而且是header only的.
        ffts: 很好使的FFT库, 和fftw的不同在于用着是真方便! 而且难能可贵在于速度居然真不比fftw慢.
            extra. dep.
            alternative?
                ok-mufft 
        fmt: formatting库, 又小又好使! 太好使了!
        ok-* vinniefalco/Amalgamate： 它是干嘛的呢? 它是专门用来把其他库"封装成"一个cpp和一个h文件的工具. 
            比如说freetype里有几十个h几十个cpp, 用起来觉得麻烦的话, 就写个配置文件然后用它跑一下, 
            立即就可以把freetype的这些cpp和h文件变成仅仅两个巨大无比的cpp和h文件. 再重复一遍, 
            巨大无比!! 这便是传说中的unity build.... 目前github上已经有很多的人开始用它来封装一些常见的库了.
            这个工具的作者vinniefalco还写了beast库, 目前已收录进了boost里.
        * freetypeAmalgam: 利用上面的工具把整个freetype封装成了一个h和一个cpp, 想用freetype又懒得编译和配置的人就把这两个文件往项目里一拖, 就可以用freetype了.
        scriptorium: 这个就不算是库了, 是几乎所有你听说过的没听说过的常见用于游戏脚本的语言的benchmark, 可以不去研究, 但不妨看看:
        tinyexpr: 我特别喜欢的数学表达式解析和计算库, 真的好用而且小, 专门用来实现在程序运行时解析用户输入的数学表达式并做计算的库, 只有两个文件, 往项目里一拖就行了:
        matplotcpp: 在C++中绑定python的matplot库.
        ok-ACE: 物理模拟 bulletphysics/bullet3
        AB:   渲染中间层 bkaradzic/bgfx
        CD:  3D灵感宣泄场所 cinder/Cinder // 后来发现 Houdini 更好玩
        CD:  命令行帮助既是命令行解析 https://github.com/docopt/docopt.cpp
        ACD: printf 不好用，ostream 也不好用，format 好用 fmtlib/fmt
        ok-ABCD: 3D 数学运算 g-truc/glm
        D:  json 结构用在 C++ 里面就像在 JS 里面一样自然 nlohmann/json
        BCD: 超高校级的 json 解析 Tencent/rapidjson
        ABCD: 用过都知道它的好的性能分析工具 jonasmr/microprofile
        ACD: 什么都能放到头文件中 nothings/stbD: 一键生成 C/C++ 对各种其他语言的接口 swig/swig
        ---
            A. 自己写一遍太累
            B. 写得很好
            C. 实用且满足我的需求
            D. 好用不折腾
            E. 代码有深度且可读性高，可以挖宝贝
            https://www.zhihu.com/question/51134387
        重点推荐 microprofile，不只用来分析性能好用，用来帮助理解引擎运行流程也是极其特别好用，
            往 Unreal 里面随便一放，它哪个线程什么时候在做什么事情、调用关系、调度状况、依赖关系
            一切都看得清清楚楚明明白白真真切切
            而且本身性能影响极小，可以远程监控，报表可以存下来慢慢研究，神器
            用来看unreal代码
        CD: 又小又快又方便的单元测试库，嗯测试很重要： onqtam/doctest
        ABCDE: 高精度浮点数运算库，Fabrice Bellard 一出手总是把很复杂的东西弄得跟玩似的，境界真的高： LibBF Library
        ---
        做存储, 数据库系统方面的开发，主要用到
        * grpc/libevent/libev/libasio 实现高性能网络服务器
        * protobuf   数据结构序列化/反序列化，方便数据交换
        ok- * LevelDB/RocksDB 嵌入式KV数据库
        * jemalloc/tcmalloc 高效内存分配器，尤其多线程场景
        * jerasure Reed Solomon编解码，给存储系统实现erasure code
        * murmurhash… 实现hash摘要
        * crc32 数据存储或传输时的数据校验
        * cJSON 解析json格式配置文件
        ok-* boost 功能丰富的C++基础库，轻度使用，C++11/14后基本不用了。
        * libRedis  redis是一个数据库服务，并不是单独的库，但其代码精简，质量非常高，
            里面很多代码都可以拿出来直接复用，比如网络，各种数据结构的实现。
        ---
        https://zh.cppreference.com/w/cpp/links/libs

        err-eDSP 
            Library SndFile not found
        ok-https://github.com/snitish/dsptools
        

    * 扩充算法库的题目的来源？
        之前写过的一些
            存到tomerge中
            * cg中写的那些，关键数学算法部分用zrlib重写
        从目的出发：自己想的一些简单题目 + 从科研论文中吸取题目，复现论文中程序
            * train what is weak and form libraries 
            //
                https://github.com/search?l=C%2B%2B&o=desc&p=19&q=in+the+paper&s=stars&type=Repositories
            --- 往下走走
                interesting_terms in extra_fields: get key terms in application area 
                    计算机网络 
                    图像处理
                    视频处理
                    媒体处理
                    棋盘算法
                    生活中的运筹学
                    NLP，semantic computing 
                    rdf, database 
                    数据分析，数据挖掘，信息检索
                    图像处理，视频处理，媒体处理 Streaming
                    压缩算法
                    sat求解器
                    automata algo
                    计算机网络
                    Marketing algo., computational ecomomics
                    os algos with OR.
                    advanced phy simulation, fem 
                    cg1-geo-processing 
                    cg1-texturing 
                    cg2-implicit modeling
                    cg2-animation
                    cg3-realistic rendering
                    cg3-physical based simulation 
                    encrypt algo. 
                interesting_terms in core_area: cvcgmlmedia...
                    cv 
                    cg
                    ml  
                    media 
                interesting_terms in math_phy_oj_opti_ann: terms in core_abi 
                    math_phy 
                    oj 
                    opti. 
                        Ford-Furkerson, 后面的 EdmondsKarp 算法, Dinitz 算法, 以及 Tarjan 在 1983 年提出的 Push-Relabel 算法.
                        https://img.tianle.me/image/20170406/11_NF_3.pdf
                    ann, dnn 
            
            --- 往上走走
                *in detail task design -- possible tasks --
                    --> hierarchical re-implement!: simple idea --> basic algos --> advanced algos!
                    // 
                        *aim-- train algos, math in real life extended areas
                        *思路：
                            term + heuristics --> online search 
                            search github 
                        heuristics:
                            寻找直观的表示--物理，几何意义
                            数学可视化，中学大学
                            构建可视化，机械
                        验证：
                            交叉验证--在网上找答案，或者用标准库进行对比
                lib-depth_math
                    ref 
                        eigen 
                        https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Image-processing
                        https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Math
                    app:
                        数论game
                            应用密码学——协议、算法
                            The classic Rock Paper Scissors game efficiently implemented in C++

                        线性代数 matrix calcu. , svd  ...
                            mesh paramiterization 
                            图像压缩与解压缩技术，这个就需要矩阵分解
                            评分矩阵、奇异值分解与Funk-SVD
                                https://zhuanlan.zhihu.com/p/34497989
                            图像处理
                            building and analyzing recommender systems
                            Image compression by singular value decomposition
                            PCA https://www.ijcai.org/Proceedings/2017/0468.pdf
                                https://github.com/WenjianYu/rSVD-single-pass
                            https://github.com/KanchanIIT/Facebook-Profile-Based-TV-Recommender-System
                            ICP algo. 
                            http://idl.hbdlib.cn/book/00000000000000/pdfbook/013/001/185550.pdf
                            机械臂
                            mesh matching
                            advanced texturing technique for 3d models, tex. corrdi. calcu. 
                            cad
                            subdev. 
                            make it more smooth 
                            http://read.pudn.com/downloads65/doc/232755/%E6%8C%87%E7%BA%B9%E5%9B%BE%E5%83%8F%E5%8C%B9%E9%85%8D%E7%9A%84%E7%AE%97%E6%B3%95%E7%A0%94%E7%A9%B6%E5%8F%8A%E5%85%B6%E5%AE%9E%E7%8E%B0.pdf
                            Occupancy Networks - Learning 3D Reconstruction in Function Space
                            https://github.com/robotics-upo/plane_detector
                            Object-Tracking
                            https://github.com/Smilingliu/smoke-detection
                            Curve Reconstruction with Many Fewer Samples
                            https://github.com/dimtziwnas/InHandScanningICCV15_GroundTruthViewer
                            https://arxiv.org/pdf/1707.05055.pdf
                            http://percept.eecs.yorku.ca/papers/robust%20homography.pdf
                            https://github.com/ZackMisso/Voxelizer

                        curves 
                            bridge2vec: a modification of fastText proposed in the paper "Towards robust word embeddings for noisy texts".

                        微分方程PDE 
                            Solves ordinary differential equations and partial differential equations using neural nets
                            Solution of nonlinear multiphysics partial differential equation systems using the Voronoi finite volume method
                            Solving high-dimensional Partial Differential Equations with Deep Learning
                            Compressing CT images with partial differential equations
                                https://github.com/marinbenc/ctdiffcomp
                            with cuda 
                            volumn seg. bidirectional seg. geodisic distance 
                            heat defussion 
                            *mesh processing 
                            video related 
                                https://github.com/kgram007/Eulerian-Motion-Magnification
                                http://persci.mit.edu/pub_pdfs/pyramid83.pdf
                            https://www.juew.org/publication/JueAniFilter.pdf
                            https://github.com/yangyangHu/lung-series-segmentation
                            https://arxiv.org/pdf/1707.05055.pdf
                            https://github.com/micma909/CLFFT-TessendorfOcean
                            https://github.com/HarryPyc/Interactive-Indirect-Illumination-Using-Voxel-Cone-Tracing
                            Realtime Procedural Terrain Generation in OpenGL
                            Color transfer implementation from the paper of Reinhard et al. in IEEE Computer Graphics and Applications
                            Interactive cloth simulator using the method described in the SIGGRAPH paper "Fast Simulation of Mass-Spring Systems
                            This paper presents AVATREE, a computational modelling framework that generates Anatomically Valid Airway tree confo

                        概率
                            Music Source Separation in the Waveform Domain
                            *rendering
                            条件随机场（CRF）
                            马尔科夫网，最大熵模型
                            -> nlp, py 
                            通过多渠道获取用户多维度的数据，如通话记录、短信信息、购买历史、以及社交网络上的相关留存信息等；
                                然后，从信息中提取各种特征建立模型，对用户进行多维度画像；最后，根据模型评分，对用户的个人信用进行评估
                            *https://github.com/pgrit/var-aware-mis-pbrt
                            https://publik.tuwien.ac.at/files/publik_253368.pdf
                            Stochastic Expectation Maximization with Variance Reduction"



                        计算几何
                            凸包

                        particle system
                            https://github.com/StarsX/ParticleEmitter
                            Real‐time generation of smoothed‐particle hydrodynamics‐based speci…


                    faster 
                        https://github.com/sergeyvoronin/LowRankMatrixDecompositionCodes
                lib-depth_phy 
                    https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Image-processing
                lib-depth_logic
                    ref
                        https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Algorithms

                    optimization 
                        Searching global optima with firefly algorithm and solving traveling salesmen problem with genetic algorithm
                        TSP problem solving with Genetic Algorithm
                        Tune parameters
                    search-tree 
                    寻路算法
                        在一张地图上进行标点，然后动画
                        https://www.youtube.com/watch?v=SC5CX8drAtU
                    oct-tree 
                        https://wenku.baidu.com/view/8346d20f6c85ec3a87c2c57f.html
                        https://blog.csdn.net/u013206238/article/details/50328359

                    a*
                        在地图上显示，游戏模式
                    ---
                    advanced stru 
                        https://arxiv.org/pdf/1111.5220.pdf
                        https://github.com/sarveshbhatnagar/LaneLinkedList
                    tree 
                        oj
                        https://yangwc.com/2020/01/10/Octree/
                        rendering 
                    graph 
                        benchmarks!
                            https://lijunchang.github.io/pdf/sigmod17p.pdf
                            dblp...
                        oj 
                        tarjan 
                            finding the strongly connected components of a directed graph.
                            Donald Knuth described Tarjan's algorithm as one of his favorite
                        mesh simplification               
                        stripification for given mesh
                        automata
                        rdf search 
                        https://patentimages.storage.googleapis.com/01/e8/3c/480bbc1dea1fba/CN1447272A.pdf
                        链路状态路由算法
                        https://www.zybuluo.com/skyword/note/856627
                        group classification 
                        tiktak user analsys(py)
                        workingflow calcu. 
                            https://lib.dr.iastate.edu/cgi/viewcontent.cgi?article=4573&context=etd
                            book--Workflow Scheduling Algorithms for Grid Computing
                        预流推进
                        增广路算法
                        https://blog.csdn.net/beijirose/article/details/8599792
                        导航线路计算
                            用 Dijkstra 算法可以计算出两点之间的最短路径。但是，你有没有想过，对于一个超级大地图来说，岔路口、道路都非常多，
                                对应到图这种数据结构上来说，就有非常多的顶点和边。如果为了计算两点之间的最短路径，在一个超级大图上动用 Dijkstra 
                                算法，遍历所有的顶点和边，显然会非常耗时。那我们有没有什么优化的方法呢？
                            地图软件用的更多的是类似 A* 的启发式搜索算法，不过也是在 Dijkstra 算法上的优化
                            Bellford 算法、Floyd 算法
                            https://blog.csdn.net/qq_25800311/article/details/90693112
                            优先搜索算法
                            基 于 点 一 边 拓 扑 关 系 的算 法
                        问答系统
                        https://github.com/miselico/globalRDFEmbeddingsISWC
                        https://lijunchang.github.io/pdf/sigmod17p.pdf
                        https://github.com/idea-iitd/Ride-Sharing
                            https://github.com/idea-iitd/Ride-Sharing
                        *https://github.com/jermp/rdf_indexes
                        https://github.com/amaldevp/Crawl_through_Neighbors
                        Finding Critical Users for Social Network Engagement: The Collapsed k-Core Problem
                        https://github.com/fyabc/SubgraphQuery
                        https://github.com/j-r77/cfdminer
                        https://arxiv.org/abs/1502.01255
                lib-depth_ds
                    https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Data
                    https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#State
                lib-depth_optimization
                    image processing 
                    plane-fitting problem (with point cloud)
                    课程管理和课表自动排班
                    
                    要掌握什么线性规划、动态规划、排队论、决策论等基本原理，注意这些都是抽象后的数学原理
                    np-hard 问题
                    路径规划算法
                    https://www.ntu.edu.sg/home/xhbei/papers/onlineroommate.pdf
                    Object-Tracking
                lib-depth_bio
                    *image processing 
                    机器人倒水
                    InfoGAN: Interpretable Representation Learning by Information Maximizi
                    https://github.com/MorganSalvatore/ADCNN
                    An implementation of the ASEF filter training in OpenCV in C++
                    https://github.com/dchaws/GeneOut
                    https://github.com/bradlarsen/switchback
                    The code of AAAI20 paper "Efficient Inference of Optimal Decision Trees"
                    Laius: Towards Latency Awareness and Improved Utilization of Spatial Multitasking Accelerators in Datacenter
                lib-depth_mixed
                    https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Memory
                    https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Miscellaneous
                    https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#IO
                    https://www.boost.org/doc/libs/1_73_0/libs/libraries.htm#Inter-language
                lib-depth_tricks
                lib-vis 
                    Implementation of the DHT refinement in our EuroVis paper "Extraction of Distinguished Hyperbolic Trajectories for 2D…
                    https://github.com/afarnudi/Corona_Structure_anlysis
                    the vis ability....
                    franziska paper 
        就业类：
            从oj中吸取题目
            面试题中吸取题目
        从程序库中吸取题目
            看看别人都实现了啥功能？
        书中作业题
        ...（迭代式开发，目前就这些，根据项目进度再补充）
        